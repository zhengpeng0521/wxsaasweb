<style lang = "less" src = 'orderList.less' scoped></style>

<script>
import wepy from 'wepy'
import moment from 'moment'
import BlankDataPage from '../../../components/blankDataPage/blankDataPage';
import {serviceRequest } from '../../../utils/request';
export default class orderList extends wepy.page {
  config = {
    navigationBarTitleText: '约课课表'
  }

  onShareAppMessage(res) {
    return {
      title: '闪闪云校, 一站式早教管理云平台',
      path: '/pages/initPage/initPage',
      imageUrl: 'https://img.ishanshan.com/gimg/img/8cc99adf30a37d72f73bf217d7831ee6',
      success: function (res) {
        wx.showToast({ title: '转发成功', icon: 'success', duration: 1000 })
      },
      fail: function (res) {
      }
    }
  }

  components = {
    blankDataPage: BlankDataPage
  }

  data = {
    singleLessonAbout :'',//单词约课按钮
    batchAboutClass    :'',//批量约课按钮
    orderLessons        : '',//预约补课
    orderListen         : '',//预约试听
    isclick:'',
    calendarType: 'week',                            //日历类型
    courseList: [],                                //课程数据
    pageIndex: 0,
    resultCount: 0,
    headerDate: moment().format('YYYY-MM-DD'),
    currentDate: moment().format('YYYY-MM-DD'),
    todayDate:moment().format('YYYY-MM-DD'),

    wStartDate: moment().startOf('week').format('YYYY-MM-DD'),
    wEndDate: moment().endOf('week').format('YYYY-MM-DD'),

    renderList: [],                                // 星期分组
    monthList: [],                                //月份分组

    completeLoading: false,                             //数据加载完全
    pageLoading: false,                             //数据加载中
    operateShow: false,                             //操作面板遮罩是否显示
    superSearchVisible: false,                             //筛选遮罩

    preparation: [],                                //筛选的数据
    preparationNextTurn: false,                             //点击筛选条件后弹出列表开关控制
    preparationType: '',
    
    chooseData_class:{},
    chooseData_tenantUser: {},
    chooseData_tenantUserf:{},
    chooseData_full:{}
  }
  onShow() {
    wx.hideLoading()
    this.buttonHidden()
    this.calendarType = 'week';
    this.getCourseList(this.currentDate);                                  //得到当前日期的课程数据
    this.getWeekList(this.wStartDate, this.wEndDate);                      //得到 渲染item
  }
  //单次补课按钮隐藏
    buttonHidden() {
      const btnList = wx.getStorageSync('session').btnPermis.split(',');
      btnList.filter(item => {
        if(item === '505000001'){
          this.singleLessonAbout = '505000001'        
        }
        if(item === '505000002'){
          this.batchAboutClass = '505000002'        
        }
         if(item === '505000003'){
          this.orderLessons = '505000003'        
        }
        if(item === '505000004'){
          this.orderListen = '505000004'        
        }
      })
    };
  methods = {
    //上周 下周
    clickToChangeWeek(key) {
      let startDate, endDate;
      if (key === 'lastWeek') {
        startDate = moment(this.wStartDate).subtract(7, 'd').format('YYYY-MM-DD');
        endDate = moment(this.wEndDate).subtract(7, 'd').format('YYYY-MM-DD');
        this.getWeekList(startDate, endDate);
      } else if (key === 'nextWeek') {
        startDate = moment(this.wStartDate).add(7, 'd').format('YYYY-MM-DD');
        endDate = moment(this.wEndDate).add(7, 'd').format('YYYY-MM-DD')
        this.getWeekList(startDate, endDate);
      }
    },
    //选择日期
    selectCurrentDate(e) {
      const date = e.detail.value;

      let wStartDate = moment(date).startOf('week').format('YYYY-MM-DD');     //星期开始时间
      let wEndDate = moment(date).endOf('week').format('YYYY-MM-DD');         //星期结束时间
      this.getWeekList( wStartDate, wEndDate );

      this.courseList = [];
      this.headerDate = date;
      this.currentDate = date;
      this.getCourseList(date)
    },
    //显示操作面板
    showOperate(e) {
      if(this.courseList[e].customize_operate){
        this.courseList.map( res => {
          return res.customize_operate = true;
        })
      }
      if (typeof e == 'number') {
        this.courseList[e].customize_operate = !this.courseList[e].customize_operate;
      } else {
        this.courseList.map(res => {
          return res.customize_operate = true;
        })
      }
      this.operateShow = !this.operateShow
    },
    oneAppointFn(courseId,cpmId,cpdId,index) {
      this.isclick=index;
      this.courseList[index].customize_operate=true;
      if(moment(this.currentDate).isBefore(this.todayDate)){
        wx.showToast({
          title: '过往课程无法操作',
          icon: 'none',
          duration: 2000
        })
        return;
      }
      wx.navigateTo({
        url : `oneAppoint/oneAppoint?courseId=${courseId}&cpmId=${cpmId}&cpdId=${cpdId}`
      })
    },
    batchFn(courseId,cpmId,cpdId,index) {
      this.isclick=index;
      this.courseList[index].customize_operate=true;
      if(moment(this.currentDate).isBefore(this.todayDate)){
        wx.showToast({
          title: '过往课程无法操作',
          icon: 'none',
          duration: 2000
        })
        return;
      }
      wx.navigateTo({
        url : `batch/batch?courseId=${courseId}&cpmId=${cpmId}&cpdId=${cpdId}`
      })
    },
    remedialFn(cpmId,cpdId,index) {
      this.isclick=index;
      this.courseList[index].customize_operate=true;
      if(moment(this.currentDate).isBefore(this.todayDate)){
        wx.showToast({
          title: '过往课程无法操作',
          icon: 'none',
          duration: 2000
        })
        return;
      }
      wx.navigateTo({
        url : `remedial/remedial?cpmId=${cpmId}&cpdId=${cpdId}`
      })
    },
    auditionFn(cpmId,cpdId,index,startTime,endTime,studyDate,courseName) {
      this.isclick=index;
      this.courseList[index].customize_operate=true;
      if(moment(this.currentDate).isBefore(this.todayDate)){
        wx.showToast({
          title: '过往课程无法操作',
          icon: 'none',
          duration: 2000
        })
        return;
      }
      wx.navigateTo({
        url : `audition/audition?cpmId=${cpmId}&cpdId=${cpdId}&startTime=${startTime}&endTime=${endTime}&studyDate=${studyDate}&courseName=${courseName}`
      })
    },
    //点击展示更多
    clickMoreBtn(e) {
      this.courseList[e].customize_more = !this.courseList[e].customize_more;
    },
    //点击选择 日期
    changeDate(date) {
      this.courseList = [];
      this.headerDate = date;
      this.currentDate = date;
      this.getCourseList(date)
    },
    //关闭筛选
    closeSuperSearch() {
      this.superSearchVisible = false;
      this.preparationNextTurn = false;
      this.preparation = [];
    },
    //筛选
    superSearch() {
      this.superSearchVisible = true;
    },
    //点击筛选条件
    nextStep(e) {
      this.preparationType = e;
      if (e == 'class') {
        this.getClassName();
      } else if (e == 'tenantUser' || e == 'tenantUserf') {
        this.getCourseTeacher();
      } else if (e == 'full') {
        this.preparation=[{
          id:'0',
          name:'未满班'
        },{
          id:'1',
          name:'满班'
        }]
      }
      this.preparationNextTurn = true;
    },
    turnBack() {
      this.preparationNextTurn = false;
      this.preparation = [];
    },
    chooseType(type, id, name) {
      this.preparationNextTurn = false;
      if (type == 'class') {
        this.chooseData_class = {};
        this.chooseData_class.id = id;
        this.chooseData_class.name = name;
      } else if (type == 'tenantUser') {
        this.chooseData_tenantUser = {};
        this.chooseData_tenantUser.id = id;
        this.chooseData_tenantUser.name = name;
      }else if(type == 'tenantUserf'){
        this.chooseData_tenantUserf = {};
        this.chooseData_tenantUserf.id = id;
        this.chooseData_tenantUserf.name = name;
      }else if(type == 'full'){
        this.chooseData_full = {};
        this.chooseData_full.id = id;
        this.chooseData_full.name = name;
      }
    },
    resetFn() {
      this.chooseData_class = {};
      this.chooseData_tenantUser = {};
      this.chooseData_tenantUserf = {};
      this.chooseData_full = {};

      this.getCourseList(this.currentDate);
      this.superSearchVisible = false;
      this.preparationNextTurn = false;
      this.preparation = [];
    },
    search() {
      this.getCourseList(this.currentDate);
      this.superSearchVisible = false;
      this.preparationNextTurn = false;
      this.preparation = [];
    },
    handleClik(e) {
      this.courseList.map(res => {
        return res.customize_operate = true;
      })
      this.operateShow = !this.operateShow
    },
    tapToDetail(cpdId,cpmId,atNames){
      wx.navigateTo({
        url : `orderListDetail/orderListDetail?cpdId=${cpdId}&cpmId=${cpmId}&atNames=${atNames?atNames:''}`
      })
    }
  }
  //得到星期日历 数组
  getWeekList(startDate, endDate) {
    let self = this;
    let renderList = [];
    for (let i = 0; i < 7; i++) {
      renderList.push({
        date: moment(startDate).add(i, 'd').format('YYYY-MM-DD'),
        day: moment(startDate).add(i, 'd').format('D')
      })
    }
    let url = `${this.$parent.service.base_url}/ss-crm-provider/wx/cerp/courseDayQuery`;
    serviceRequest(url, { startDate, endDate }).then((ret) => {
      if (!!ret && ret.errorCode == 0) {
        renderList && renderList.map(function (item, index) {
          if (!!ret.dayList && (ret.dayList.indexOf(item.date) == -1)) {
            renderList[index].noCourse = true;
          } else {
            renderList[index].noCourse = false;
          }
        })
        this.renderList = renderList;
        this.wStartDate = startDate;
        this.wEndDate = endDate;
        this.$apply();
      } else {
        wx.showModal({ content: ret.errorMessage || '网络异常', showCancel: false, confirmColor: '#5d9cec' });
      }
    })
  }

  //得到 课程列表
  getCourseList(date) {
    this.pageLoading = true;
    this.completeLoading = false;
    let url = `${this.$parent.service.base_url}/ss-crm-provider/wx/cerp/cp/query`;
    let params = {
      startDate: date, endDate: date, pageIndex: 0, pageSize: 10
    }
    if (typeof this.chooseData_class.id != 'undefined') {//有课程名称查询
      params.roomId = this.chooseData_class.id
    }
    if (typeof this.chooseData_tenantUser.id != 'undefined') {//有主教查询
      params.mtid = this.chooseData_tenantUser.id
    }
    if (typeof this.chooseData_tenantUserf.id != 'undefined') {//有助教查询
      params.atid = this.chooseData_tenantUserf.id
    }
    if (typeof this.chooseData_full.id != 'undefined') {//有主教查询
      params.isfull = this.chooseData_full.id
    }
    serviceRequest(url, params).then((ret) => {
      if (ret.errorCode == 0) {
        this.courseList = ret.results.map((item, index) => {
          return Object.assign(item, {
            customize_more: true,
            customize_operate: true,
            new_mtNames: item.mtNames.split(',').length > 2 ? `${item.mtNames.split(',')[0]},${item.mtNames.split(',')[1]}...等${item.mtNames.split(',').length}人` : item.mtNames,
            new_atNames: !!item.atNames && item.atNames.split(',').length > 2 ? `${item.atNames.split(',')[0]},${item.atNames.split(',')[1]}...等${item.atNames.split(',').length}人` : item.atNames
          })
        })
        this.resultCount = ret.data.resultCount;
        this.pageIndex = 0;
        this.pageLoading = false;
        this.$apply();
      } else {
        this.courseList = [];
        this.resultCount = 0;
        this.pageLoading = false;
        wx.showModal({ content: ret.errorMessage || '网络异常', showCancel: false, confirmColor: '#5d9cec' });
      }
    })
  }

  getMoreCourseSchedule() {
    if (!this.pageLoading) {
      let { currentDate, pageIndex, resultCount, courseList } = this;
      let url = `${this.$parent.service.base_url}/ss-crm-provider/wx/cerp/cp/query`;
      let params = {
        startDate: currentDate, endDate: currentDate, pageIndex: ++pageIndex, pageSize: 10
      }
      if (typeof this.chooseData_class.id != 'undefined') {//有课程名称查询
        params.roomId = this.chooseData_class.id
      }
      if (typeof this.chooseData_tenantUser.id != 'undefined') {//有主教查询
        params.mtid = this.chooseData_tenantUser.id
      }
      if (typeof this.chooseData_tenantUserf.id != 'undefined') {//有助教查询
        params.atid = this.chooseData_tenantUserf.id
      }
      if (typeof this.chooseData_full.id != 'undefined') {//有主教查询
        params.isfull = this.chooseData_full.id
      }
      this.pageLoading = true;
      if (courseList.length >= resultCount) {
        this.completeLoading = true;
        this.pageLoading = false;
      } else {
        serviceRequest(url, params).then((ret) => {
          if (ret && (ret.errorCode == 0)) {
            this.courseList = [...this.courseList, ...ret.results.map((item, index) => {
              return Object.assign(item, {
                customize_more: true,
                customize_operate: true,
                new_mtNames: item.mtNames.split(',').length > 2 ? `${item.mtNames.split(',')[0]},${item.mtNames.split(',')[1]}...等${item.mtNames.split(',').length}人` : item.mtNames,
                new_atNames: !!item.atNames && item.atNames.split(',').length > 2 ? `${item.atNames.split(',')[0]},${item.atNames.split(',')[1]}...等${item.atNames.split(',').length}人` : item.atNames
              })
            })];
            this.pageIndex = pageIndex;
            this.pageLoading = false;
            this.$apply();
          } else {
            wx.showModal({ content: ret.errorMessage || '网络异常', showCancel: false, confirmColor: '#5d9cec' });
          }
        })
      }
    }
  }
  //获取筛选条件中的列表
  //教室名称
  getClassName() {
    let url = `${this.$parent.service.base_url}/ss-crm-provider/wx/sysBase/cerp/classroom/summaryQuery`;
    serviceRequest(url, {}).then((ret) => {
      if (ret && (ret.errorCode == 0)) {
        this.preparation = [...ret.results]
        this.$apply()
      } else {
        wx.showModal({ content: ret.errorMessage || '网络异常', showCancel: false, confirmColor: '#5d9cec' });
      }
    })
  }
  //主教
  getCourseTeacher() {
    let url = `${this.$parent.service.base_url}/ss-crm-provider/wx/sysBase/tenantUser/summaryQuery`;
    serviceRequest(url, {}).then((ret) => {
      if (ret && (ret.errorCode == 0)) {
        this.preparation = [...ret.results]
        this.$apply()
      } else {
        wx.showModal({ content: ret.errorMessage || '网络异常', showCancel: false, confirmColor: '#5d9cec' });
      }
    })
  }
  //是否满班

}
</script>

<template>
  <view
    class='container'
    @tap="handleClik"
  >
    <view class='time_select_block'>
      <view class='time_select_header_wrapper'>
        <view class='time_select_header'>
          <view
            class='item_select_header_label'
            @tap="clickToChangeWeek('lastWeek')"
          >
            <view class='item_select_header_left_ba'></view>
            <view class='item_select_header_left_value'>上周</view>
          </view>
          <picker
            class='item_select_header_center'
            mode='date'
            value='{{ headerDate }}'
            bindchange='selectCurrentDate'
          >
            <view style='display : inline-block'>{{ headerDate }}</view>
            <view class='arrow_down'></view>
          </picker>
          <view
            class='item_select_header_label'
            @tap="clickToChangeWeek('nextWeek')"
          >
            <view class='item_select_header_left_value'>下周</view>
            <view class='item_select_header_right_ba'></view>
          </view>
        </view>
        <view
          class='search_icon'
          @tap="superSearch"
        ></view>
      </view>
      <view class='week_header'>
        <view class='week_header_item'>日</view>
        <view class='week_header_item'>一</view>
        <view class='week_header_item'>二</view>
        <view class='week_header_item'>三</view>
        <view class='week_header_item'>四</view>
        <view class='week_header_item'>五</view>
        <view class='week_header_item'>六</view>
      </view>
      <view class='calendar_item'>
        <repeat
          for='{{ renderList }}'
          item='item'
        >
          <view
            @tap="changeDate({{ item.date }})"
            class='calendar_item_value'
          >
            <view class="{{ currentDate == item.date && 'week_header_item_selected' }}">{{ item.day }}</view>
            <view
              hidden="{{ item.noCourse }}"
              class='has_course'
            ></view>
          </view>
        </repeat>
      </view>
    </view>
    <view class="{{ calendarType == 'week' ? 'schedule_scroll_block' : 'schedule_scroll_block_open' }}">
      <view
        hidden="{{ courseList.length !== 0 }}"
        class="{{ calendarType == 'week' ? 'blank_data_page' : 'blank_data_page blank_data_page_open' }}"
      >
        <blankDataPage title='暂无课程数据~' />
      </view>
      <view
        hidden='{{ !pageLoading }}'
        class='loading_box'
      >
        <view class='loading_content'>
          <view class='loading_cicle loading1'></view>
          <view class='loading_cicle loading2'></view>
          <view class='loading_cicle'></view>
        </view>
      </view>
      <scroll-view
        scroll-y
        lower-threshold='50'
        class='list_block'
        bindscrolltolower="getMoreCourseSchedule"
      >
        <repeat for="{{courseList}}">
          <view class="list_item" @tap="tapToDetail({{item.cpdId}},{{item.cpmId}},{{item.atNames}})">
            <view
              class="list_item_line_center"
              style="margin-bottom:0"
            >
              <view class="list_item_course_title"></view>
              <view
                class="list_item_course_operate"
                wx:if="{{ singleLessonAbout || batchAboutClass|| orderLessons || orderListen ? true : false }}"
                @tap.stop="showOperate({{index}})"
              >
                <view
                  class="list_item_course_operate_wrapper"
                  hidden="{{item.customize_operate}}"
                >
                <view hidden ="{{singleLessonAbout != '505000001' }}">
                  <view
                    class="list_item_course_operate_list"
                    @tap.stop="oneAppointFn({{item.courseId}},{{item.cpmId}},{{item.cpdId}},{{index}})"
                  >
                    <view class="list_item_course_operate_list_icon oneAppoint"></view>
                    <view class="list_item_course_operate_list_name">单次约课</view>
                  </view>
                </view>
                <view hidden ="{{ batchAboutClass != '505000002' }}">
                  <view
                    class="list_item_course_operate_list"
                    @tap.stop="batchFn({{item.courseId}},{{item.cpmId}},{{item.cpdId}},{{index}})"
                  >
                    <view class="list_item_course_operate_list_icon batchAppoint"></view>
                    <view class="list_item_course_operate_list_name">批量约课</view>
                  </view>
                  </view>
                  <view hidden ="{{ orderLessons != '505000003' }}">
                  <view
                    class="list_item_course_operate_list"
                    @tap.stop="remedialFn({{item.cpmId}},{{item.cpdId}},{{index}})"
                  >
                    <view class="list_item_course_operate_list_icon makeupAppoint"></view>
                    <view class="list_item_course_operate_list_name">预约补课</view>
                  </view>
                  </view>
                  <view hidden ="{{ orderListen != '505000004' }}">
                  <view
                    class="list_item_course_operate_list"
                    @tap.stop="auditionFn({{item.cpmId}},{{item.cpdId}},{{index}},{{item.startTime}},{{item.endTime}},{{item.studyDate}},{{item.courseName}})"
                  >
                    <view class="list_item_course_operate_list_icon makeupAppointAud"></view>
                    <view class="list_item_course_operate_list_name">预约试听</view>
                  </view>                 
                  </view>                 
                </view>
              </view>
            </view>
            <view class="list_item_line_center">
              <view class="list_item_course_name">{{item.courseName}}</view>
              <view class="list_item_course_time">{{item.startTime}} - {{item.endTime}}</view>
            </view>
            <view class="list_item_line_pos">
              <view style="width:calc(100% - 56rpx)">
                <view
                  class="list_item_course_value"
                  style="margin-bottom : 20rpx"
                >主教 : {{!!item.new_mtNames ? item.new_mtNames : ''}}</view>
                <view
                  class="list_item_course_value"
                  style="margin-bottom : 20rpx"
                >助教 : {{!!item.new_atNames ? item.new_atNames : ''}}</view>
                <view
                  class="list_item_course_value"
                  style="margin-bottom : 20rpx"
                >教室 : {{item.roomName}}</view>
                <view
                  class="list_item_course_value"
                  style="margin-bottom : 20rpx"
                >上课人数 : {{item.num}}{{item.maxAttNum != -1 ? ('/'+item.maxAttNum) : ''}}</view>
                <view
                  class="list_item_course_value"
                  style="margin-bottom : 20rpx"
                >标题 : {{item.title}}</view>
                <view
                  class="list_item_course_value"
                  style="margin-bottom : 20rpx"
                >约课班级 : {{item.clsName}}</view>
              </view>
              <view
                class="list_item_pulldowm"
                @tap.stop="clickMoreBtn({{index}})"
                hidden="{{!item.customize_more}}"
              ></view>
              <view
                class="list_item_pullup"
                @tap.stop="clickMoreBtn({{index}})"
                hidden="{{item.customize_more}}"
              ></view>
            </view>
            <view
              class='list_item_course_content'
              hidden="{{item.customize_more}}"
              style="width:calc(100% - 56rpx)"
            >
              <view
                class="list_item_course_value"
                style="margin-bottom : 20rpx"
              >自主约课 : {{item.bookCls == 1 ? '开启' : '关闭'}}</view>
              <view
                class="list_item_course_value"
                style="margin-bottom : 20rpx"
              >上课主题 : {{item.courseTheme}}</view>
              <view
                class="list_item_course_value"
                style="margin-bottom : 20rpx"
              >消耗课时 : {{item.cost}}</view>
              <view
                class="list_item_course_value"
                style="margin-bottom : 20rpx"
              >课程进度 : {{item.process}}</view>
              <view
                class="list_item_course_value"
                style="margin-bottom : 20rpx"
              >最大人数 : {{item.maxNum}}</view>
              <view
                class="list_item_course_value"
                style="margin-bottom : 20rpx"
              >补课人数 : {{item.mulNum}}{{item.maxMulNum == -1 ? '' : '/' + item.maxMulNum}}</view>
              <view
                class="list_item_course_value"
                style="margin-bottom : 20rpx"
              >排队人数 : {{item.lineNum}}</view>
              <view
                class="list_item_course_value"
                style="margin-bottom : 20rpx"
              >试听人数 : {{item.tryNum}}{{item.maxTryNum == -1 ? '' : '/' + item.maxTryNum}}</view>
            </view>
          </view>
        </repeat>
      </scroll-view>
    </view>
    <view>
      <view
        hidden='{{ !superSearchVisible }}'
        class="super_search_wrap"
        @tap="closeSuperSearch"
      ></view>
      <view class="{{ superSearchVisible ? 'super_search_block open_superSearch' : 'super_search_block' }}">
        <view class="form_container">
          <view class="form_box">
            <view class="form_item">
              <view class="form_item_label">教室名称</view>
              <view class='form_item_value'>
                <view class='picker'></view>
                <view
                  class="{{chooseData_class.id ? 'picker_placeholder picker_placeholder_hasData' : 'picker_placeholder' }}"
                  @tap="nextStep('class')"
                >{{chooseData_class.id ? chooseData_class.name : '请选择'}}</view>
              </view>
            </view>
            <view class="form_item">
              <view class="form_item_label">主教姓名</view>
              <view class='form_item_value'>
                <view class='picker'></view>
                <view
                  class="{{chooseData_tenantUser.id ? 'picker_placeholder picker_placeholder_hasData' : 'picker_placeholder' }}"
                  @tap="nextStep('tenantUser')"
                >{{chooseData_tenantUser.id ? chooseData_tenantUser.name : '请选择'}}</view>
              </view>
            </view>
            <view class="form_item">
              <view class="form_item_label">助教姓名</view>
              <view class='form_item_value'>
                <view class='picker'></view>
                <view
                  class="{{chooseData_tenantUserf.id ? 'picker_placeholder picker_placeholder_hasData' : 'picker_placeholder' }}"
                  @tap="nextStep('tenantUserf')"
                >{{chooseData_tenantUserf.id ? chooseData_tenantUserf.name : '请选择'}}</view>
              </view>
            </view>
            <view class="form_item">
              <view class="form_item_label">是否满班</view>
              <view class='form_item_value'>
                <view class='picker'></view>
                <view
                  class="{{chooseData_full.id ? 'picker_placeholder picker_placeholder_hasData' : 'picker_placeholder' }}"
                  @tap="nextStep('full')"
                >{{chooseData_full.id ? chooseData_full.name : '请选择'}}</view>
              </view>
            </view>
          </view>
        </view>
        <view class='super_search_btn_group'>
          <button
            class='super_reset_btn'
            hover-class='btn_reset_hover'
            @tap="resetFn"
          >重置</button>
          <button
            class='super_confirm_btn'
            hover-class='btn_save_hover'
            @tap="search"
          >搜索</button>
        </view>
      </view>
      <view class="{{ preparationNextTurn ? 'super_search_block open_superSearch' : 'super_search_block' }}">
        <view class="super_search_block_header">
          <view
            class="super_search_backBtn"
            @tap="turnBack"
          ></view>
          {{preparationType == 'class' ? '教室名称' : ( preparationType == 'tenantUser' ? '主教姓名' : ( preparationType == 'tenantUserf' ? '助教姓名' : '是否满班' ) )}}
        </view>
        <scroll-view
          scroll-y
          class="super_search_scroll"
        >
          <view class="form_container">
            <view class="form_box">
              <repeat for="{{preparation}}">
                <view
                  class="form_item"
                  @tap="chooseType({{ preparationType }}, {{ item.id }}, {{item.name}})"
                >
                  <view class="form_item_label">{{item.name}}</view>
                  <view class='form_item_value'>
                  </view>
                </view>
              </repeat>
            </view>
          </view>
        </scroll-view>
      </view>
    </view>
  </view>
</template>
